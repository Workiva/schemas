{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Output Data Resource Template",
  "description": "OneCloud Output Resource Template.  This resource represents the output of a Connector Studio Processor.  Since it can produce a file or a scalar data value, neither data or path is required.",
  "type": "object",
  "required": ["name", "title"],
  "properties": {
    "profile": {
      "propertyOrder": 10,
      "default": "output-data-resource-template",
      "title": "Profile",
      "description": "The profile of this descriptor.",
      "context": "Every Package and Resource descriptor has a profile. The default profile, if none is declared, is `data-package` for Package and `data-resource` for Resource.",
      "type": "string",
      "examples": [
        "{\n  \"profile\": \"tabular-data-package\"\n}\n",
        "{\n  \"profile\": \"http://example.com/my-profiles-json-schema.json\"\n}\n"
      ]
    },
    "id": {
      "propertyOrder": 15,
      "title": "Id",
      "description": "A globally unique identifier.",
      "type": "string",
      "examples": [
        "{\n  \"id\": \"0b8bd486-9c8d-4ae4-b6c1-384e0490f5c2\"\n}\n"
      ]
    },
    "name": {
      "propertyOrder": 20,
      "title": "Name",
      "description": "An identifier string. Lower and upper case characters with `.`, `_`, `-` and `/` are allowed.",
      "type": "string",
      "pattern": "^([-a-zA-Z0-9._/])+$",
      "context": "This is ideally a url-usable and human-readable name. Name `SHOULD` be invariant, meaning it `SHOULD NOT` change when its parent descriptor is updated.",
      "examples": [
        "{\n  \"name\": \"my-nice-name\"\n}\n"
      ]
    },
    "path": {
      "propertyOrder": 30,
      "title": "Path",
      "description": "A reference to the data for this resource, as either a path as a string, or an array of paths as strings. of valid URIs.",
      "oneOf": [
        {
          "title": "Path",
          "description": "A fully qualified URL, or a POSIX file path..",
          "type": "string",
          "examples": [
            "{\n  \"path\": \"file.csv\"\n}\n",
            "{\n  \"path\": \"http://example.com/file.csv\"\n}\n"
          ],
          "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly."
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "Path",
            "description": "A fully qualified URL, or a POSIX file path..",
            "type": "string",
            "examples": [
              "{\n  \"path\": \"file.csv\"\n}\n",
              "{\n  \"path\": \"http://example.com/file.csv\"\n}\n"
            ],
            "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly."
          },
          "examples": [
            "[ \"file.csv\" ]\n",
            "[ \"http://example.com/file.csv\" ]\n"
          ]
        }
      ],
      "context": "The dereferenced value of each referenced data source in `path` `MUST` be commensurate with a native, dereferenced representation of the data the resource describes. For example, in a *Tabular* Data Resource, this means that the dereferenced value of `path` `MUST` be an array.",
      "examples": [
        "{\n  \"path\": [\n    \"file.csv\",\n    \"file2.csv\"\n  ]\n}\n",
        "{\n  \"path\": [\n    \"http://example.com/file.csv\",\n    \"http://example.com/file2.csv\"\n  ]\n}\n",
        "{\n  \"path\": \"http://example.com/file.csv\"\n}\n"
      ]
    },
    "data": {
      "propertyOrder": 230,
      "title": "Data",
      "description": "Inline data for this resource."
    },
    "schema": {
      "propertyOrder": 40,
      "title": "Schema",
      "description": "A schema for this resource.",
      "type": "object"
    },
    "title": {
      "propertyOrder": 50,
      "title": "Title",
      "description": "A human-readable title.",
      "type": "string",
      "examples": [
        "{\n  \"title\": \"My Package Title\"\n}\n"
      ]
    },
    "description": {
      "propertyOrder": 60,
      "title": "Description",
      "description": "A text description. Markdown is encouraged.",
      "type": "string",
      "examples": [
        "{\n  \"description\": \"# My Package description\\nAll about my package.\"\n}\n"
      ]
    },
    "format": {
      "propertyOrder": 80,
      "title": "Format",
      "description": "The file format of this resource.",
      "context": "`csv`, `xls`, `json` are examples of common formats.",
      "type": "string",
      "examples": [
        "{\n  \"format\": \"xls\"\n}\n"
      ]
    },
    "mediatype": {
      "propertyOrder": 90,
      "title": "Media Type",
      "description": "The media type of this resource. Can be any valid media type listed with [IANA](https://www.iana.org/assignments/media-types/media-types.xhtml).",
      "type": "string",
      "pattern": "^(.+)/(.+)$",
      "examples": [
        "{\n  \"mediatype\": \"text/csv\"\n}\n"
      ]
    },
    "encoding": {
      "propertyOrder": 100,
      "title": "Encoding",
      "description": "The file encoding of this resource.",
      "type": "string",
      "default": "utf-8",
      "examples": [
        "{\n  \"encoding\": \"utf-8\"\n}\n"
      ]
    },
    "encrypted": {
      "propertyOrder": 110,
      "title": "Encrypted",
      "description": "Whether or not the resource is encrypted.",
      "type": "boolean",
      "examples": [
        "{\n  \"encrypted\": true\n}\n"
      ]
    },
    "bytes": {
      "propertyOrder": 120,
      "options": {
        "hidden": true
      },
      "title": "Bytes",
      "description": "The size of this resource in bytes.",
      "type": "integer",
      "examples": [
        "{\n  \"bytes\": 2082\n}\n"
      ]
    },
    "hash": {
      "propertyOrder": 130,
      "options": {
        "hidden": true
      },
      "title": "Hash",
      "type": "string",
      "description": "The MD5 hash of this resource. Indicate other hashing algorithms with the {algorithm}:{hash} format.",
      "pattern": "^([^:]+:[a-fA-F0-9]+|[a-fA-F0-9]{32}|)$",
      "examples": [
        "{\n  \"hash\": \"d25c9c77f588f5dc32059d2da1136c02\"\n}\n",
        "{\n  \"hash\": \"SHA256:5262f12512590031bbcc9a430452bfd75c2791ad6771320bb4b5728bfb78c4d0\"\n}\n"
      ]
    }
  }
}
